'use strict';(function(K){function D(e){e()}function E(e){e(this)}function G(){if(u){do q=!1,A.shift()();while(--u)}q=!1}function t(e){function m(a){0===h&&(F(a)?a.then(m,c):(f=a,h=2,null!==b&&("function"===typeof b?b(a):b.forEach(E,a),b=null),d=null,null!==k&&("function"===typeof k?k():k.forEach(D),k=null)))}function c(a){0===h&&(f=a,h=1,null!==d&&("function"===typeof d?d(a):d.forEach(E,a),d=null),b=null,null!==k&&("function"===typeof k?k():k.forEach(D),k=null))}var f,h=0,b=null,d=null,k=null,g=
{then:function(a,l){void 0!=a&&"function"!==typeof a&&console.warn(Object.prototype.toString.call(a)+" is not a valid function to be called after a successful promise");void 0!=l&&"function"!==typeof l&&console.warn(Object.prototype.toString.call(l)+" is not a valid function to be called after a rejected promise");if(0===h)return H(function(v,y){var w="function"===typeof a?function(){v(a(f))}:v,I="function"===typeof l?function(){y(l(f))}:y;null!==b?"function"===typeof b?b=[b,w]:b.push(w):b=w;null!==
d?"function"===typeof d?d=[d,I]:d.push(I):d=I});try{return 2===h?"function"===typeof a?B(a(f)):r:"function"===typeof l?p(l(f)):r}catch(v){return p(v)}},"catch":function(a){void 0!=a&&"function"!==typeof a&&console.warn(Object.prototype.toString.call(a)+" is not a valid function to be called after a rejected promise");if(0===h)return H(function(l){null!==d?"function"===typeof d?d=[d,function(){l(a(f))}]:d.push(function(){l(a(f))}):d=function(){l(a(f))};null!==b?"function"===typeof b?b=[b,l]:b.push(l):
b=l});if(2===h)return B(f);try{return"function"===typeof a?B(a(f)):r}catch(l){return p(l)}},"finally":function(a){void 0!=a&&"function"!==typeof a&&console.warn(Object.prototype.toString.call(a)+" is not a valid function to be called 'finally' after promise");if(0===h)null!==k?"function"===typeof k?k=[k,a]:k.push(a):k=a;else try{a()}catch(l){return p(l)}return g}};!0===C&&(g[z]="Promise");if(!0===q)A.push(function(){try{e(m,c)}catch(a){c(a)}}),u=u+1|0;else{n=n+1|0;if(q=128===n)try{e(m,c)}catch(a){c(a)}else{try{e(m,
c)}catch(a){c(a)}!0===q&&1===n&&G()}n=n-1|0}return g}function H(e){function m(g){0===f&&(c=g,f=1,null!==b&&("function"===typeof b?b(g):b.forEach(E,g),b=null),h=null,null!==d&&("function"===typeof d?d():d.forEach(D),d=null))}var c,f=0,h=null,b=null,d=null,k={then:function(g,a){g&&"function"!==typeof g&&console.error(Object.prototype.toString.call(g)+" is not a valid function to be called after a successful promise");a&&"function"!==typeof a&&console.error(Object.prototype.toString.call(a)+" is not a valid function to be called after a rejected promise");
if(0===f)return t(function(l,v){var y="function"===typeof g?function(){l(g(c))}:l,w="function"===typeof a?function(){v(a(c))}:v;null!==h?"function"===typeof h?h=[h,y]:h.push(y):h=y;null!==b?"function"===typeof b?b=[b,w]:b.push(w):b=w});try{return 2===f?"function"===typeof g?x(g(c)):r:"function"===typeof a?p(a(c)):r}catch(l){return p(l)}},"catch":function(g){g&&"function"!==typeof g&&console.error(Object.prototype.toString.call(g)+" is not a valid function to be called after a rejected promise");if(0===
f)return t(function(a){null!==b?"function"===typeof b?b=[b,function(){a(g(c))}]:b.push(function(){a(g(c))}):b=function(){a(g(c))};null!==h?"function"===typeof h?h=[h,a]:h.push(a):h=a});if(2===f)return x(c);try{return"function"===typeof g?x(g(c)):r}catch(a){return p(a)}},"finally":function(g){"function"!==typeof g&&console.error(Object.prototype.toString.call(g)+" is not a valid function to be called 'finally' after promise");0===f?null!==d?"function"===typeof d?d=[d,g]:d.push(g):d=g:g();return k}};
!0===C&&(k[z]="Promise");try{e(function l(a){0===f&&(F(a)?a.then(l,m):(c=a,f=2,null!==h&&("function"===typeof h?h(a):h.forEach(E,a),h=null),null!==d&&("function"===typeof d?d():d.forEach(D),d=null),b=null))},m)}catch(g){m(g)}return k}function x(e){if("object"===typeof e&&null!==e&&"function"===typeof e.then)return e;var m={then:function(c){if("function"!==typeof c)return m;if(!0===q)return H(function(h,b){A.push(function(){try{h(c(e))}catch(d){b(d)}});u=u+1|0});n=n+1|0;var f=null;try{(q=128===n)?
A.push(function(){c(e)}):(f=c(e),!0===q&&1===n&&G())}catch(h){return p(h)}finally{n=n-1|0}return B(f)},"catch":function(){return m},"finally":function(c){if("function"===typeof c)if(!0===q)A.push(c),u=u+1|0;else{n=n+1|0;try{(q=128===n)?(c(),q=!1):(c(),!0===q&&1===n&&G())}catch(f){return p(f)}finally{n=n-1|0}}return m}};!0===C&&(m[z]="Promise");return m}function B(e){if("object"===typeof e&&null!==e&&"function"===typeof e.then)return e;var m={then:function(c){try{return"function"===typeof c?x(c(e)):
r}catch(f){return p(f)}},"finally":function(c){try{"function"===typeof c&&c()}catch(f){return p(f)}return m},"catch":function(){return m}};!0===C&&(m[z]="Promise");return m}function p(e){var m={then:function(c,f){try{return"function"===typeof f?x(f(e)):r}catch(h){return p(h)}},"finally":function(c){try{"function"===typeof c&&c()}catch(f){return p(f)}return m},"catch":function(c){try{return"function"===typeof c?x(c(e)):r}catch(f){return p(f)}}};!0===C&&(m[z]="Promise");return m}const A=[],F=t.isPromise=
function(e){return"object"===typeof e&&null!==e&&"function"===typeof e.then};var n=0,q=!1,u=0,z="undefined"!==typeof Symbol&&Symbol.toStringTag,C="symbol"===typeof z,r=x();t.resolve=B;t.reject=p;var J=!1;t.race=function(e){if(!e||!e.forEach)return console.error(Object.prototype.toString.call(e)+" is not a valid iterable array of promises. If you are using an array-like object, then you must call Array.prototype.slice.call on the object before passing it to SPromise.race."),r;J||e.length||(J=!0,console.warn(Object.prototype.toString.call(e)+
" is an empty array of promises passed to SPromise"));return t(function(m,c){function f(g){b&&(b=0,m(g))}function h(g){b&&(b=0,c(g))}for(var b=1,d=0,k;d<e.length&&b;d=d+1|0)F(k=e[d])?k.then(f,h):f(k)})};t.all=function(e){return e&&e.forEach?t(function(m,c){function f(a){g.then(function(l){d[a]=l;b=b-1|0;0===b&&m(d)},function(l){0<b&&(b=-1,c(l))})}for(var h=e.length|0,b=h,d=[],k=0,g;k<h;k=k+1|0)d[k]=F(g=e[k])?f(k):g}):(console.error(Object.prototype.toString.call(e)+" is not a valid iterable array of promises. If you are using an array-like object, then you must call Array.prototype.slice.call on the object before passing it to SPromise.all."),
r)};K.SPromise=t})("undefined"===typeof self?this:self);//AnonyCo
